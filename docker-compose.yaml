version: "3"

services: 

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: elasticsearch
    restart: always
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - observability

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    container_name: kibana
    restart: always
    depends_on: 
      - elasticsearch
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    networks:
      - observability
    
  db:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: shilton
      POSTGRES_PASSWORD: shilton15048742W

  adminpostgres:
    image: adminer
    container_name: adminpostgres
    restart: always
    depends_on: 
      - db
    ports:
      - 8080:8080

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.14.0
    container_name: metricbeat
    restart: on-failure
    depends_on: 
      - elasticsearch
    command: ["--strict.perms=false"]
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./beats/metric/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
    networks:
      - observability

networks:
  observability:
    driver: bridge